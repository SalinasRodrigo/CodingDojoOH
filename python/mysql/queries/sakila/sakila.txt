show databases;

use sakila;

show tables;

desc customer;
desc countries;
desc address;
desc category;

select * from customer;
select * from city;
select * from address;
select * from country;
select * from film;
select * from film_actor;
select * from film_category;
select * from film_text;
select * from category;
select * from actor;
select * from actor_info;
select * from customer;

-- ¿Qué consulta ejecutarías para obtener todos los clientes dentro de ciudad_id = 312?
select customer.customer_id, customer.first_name, customer.last_name, customer.email, address.address, city.city, country.country 
from customer
JOIN address ON address.address_id = customer.address_id
JOIN city on city.city_id = address.city_id
JOIN country on country.country_id = city.country_id
where city.city_id = 312; 

-- ¿Qué consulta ejecutarías para obtener todas las películas de comedias?
select film.title, film.description, film.release_year, film.rating, film.special_features, category.name from film_category
join film on film.film_id = film_category.film_id
join category on category.category_id = film_category.category_id
where category.name = 'Comedy';

-- ¿Qué consulta ejecutarías para obtener todas las películas por actor_id=5?
select actor.actor_id, actor.first_name, actor.last_name, film.title, film.description, film.release_year 
from film
join film_actor on film_actor.film_id = film.film_id
join actor on actor.actor_id = film_actor.actor_id
where film_actor.actor_id = 5;

-- ¿Qué consulta ejecutarías para obtener todos los clientes en store_id=1 
-- y dentro de estas ciudades (1, 42, 312 y 459)? 
select customer.customer_id, customer.first_name, customer.last_name, customer.email,
address.address, address.district
from customer
join address on customer.address_id = address.address_id
where customer.store_id = 1 and 
(address.city_id = 1 or address.city_id = 42 or address.city_id = 312 or address.city_id = 459);

-- ¿Qué consulta ejecutarías para obtener todas las películas con una "calificación = G" y 
-- una "característica especial = detrás de escena", unidas por actor_id = 15?
-- Tu consulta debe devolver el título de la película, la descripción, el año de lanzamiento, 
-- la clasificación, las características especiales, el género (categoría) y el nombre y apellido del actor.
select film.title, film.description, film.release_year, film.rating, film.special_features, category.name, 
actor.first_name, actor.last_name
from film
join film_actor on film_actor.film_id = film.film_id
join actor on actor.actor_id = film_actor.actor_id
join film_category on film_category.film_id = film.film_id
join category on film_category.category_id = category.category_id
where actor.actor_id = 15 and film.rating = 'G' and film.special_features like '%Behind the Scenes%';

-- ¿Qué consulta ejecutarías para obtener todos los actores que se unieron al film_id = 369? 
-- Tu consulta debe devolver film_id, título, actor_id y actor_name.
select film.film_id, film.title, actor.actor_id, actor.first_name, actor.last_name 
from film
join film_actor on film_actor.film_id = film.film_id
join actor on actor.actor_id = film_actor.actor_id
where film.film_id = 369;

--  ¿Qué consulta ejecutarías para obtener todas las películas de drama con una tarifa de arriendo de 2,99?
-- Tu consulta debe devolver el título de la película, la descripción, el año de lanzamiento, la clasificación,
-- las características especiales y el género (categoría).
select film.title, film.description, film.release_year, film.rating, film.special_features, category.name as category
from film 
join film_category on film_category.film_id = film.film_id
join category on film_category.category_id = category.category_id
where category.name = 'Drama' and film.rental_rate = 2.99;

-- ¿Qué consulta ejecutarías para obtener todas las películas de acción que estén unidas por SANDRA KILMER?
-- Tu consulta debe devolver el título de la película, la descripción, el año de lanzamiento, la clasificación,
-- las características especiales, el género (categoría) y el nombre y apellido del actor.
select film.title, film.description, film.release_year, film.rating, film.special_features, category.name as category, 
CONCAT(actor.first_name, ' ', actor.last_name ) AS actor_name
from film
join film_actor on film_actor.film_id = film.film_id
join actor on actor.actor_id = film_actor.actor_id
join film_category on film_category.film_id = film.film_id
join category on film_category.category_id = category.category_id
where actor.first_name = 'SANDRA' and actor.last_name = 'KILMER' and category.name = 'Action';
